name: Deploy Infrastructure

on:
  schedule:
    - cron: '0 9 * * 1-5'  # 9AM JST weekdays (0 UTC = 9 JST)
  workflow_dispatch:  # Allow manual triggers

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Terraform Init
      working-directory: infra/terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: infra/terraform
      run: terraform plan

    - name: Terraform Apply
      working-directory: infra/terraform
      run: terraform apply --auto-approve

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ap-northeast-1 --name staging-todo-eks

    - name: Terraform Apply
      working-directory: infra/terraform
      run: terraform apply --auto-approve

    - name: Deploy ArgoCD Applications
      run: |
        kubectl apply -f infra/k8s/application.yaml
        kubectl apply -f infra/k8s/actions-runner-app.yaml

    - name: Wait for Applications to Sync
      run: |
        echo "Waiting for ArgoCD applications to sync..."
        kubectl wait --for=condition=synced application/my-app -n argocd --timeout=300s || echo "Main app sync timeout"
        kubectl wait --for=condition=synced application/actions-runner-controller -n argocd --timeout=300s || echo "Actions runner sync timeout"

    - name: Verify Deployment
      run: |
        kubectl get applications -n argocd
        kubectl get pods -A
        kubectl get ingress -A
        kubectl get svc -A

    - name: Send notification on failure
      if: failure()
      run: |
        echo "Deployment failed at $(date)"
        # Add notification logic here (Slack, email, etc.)